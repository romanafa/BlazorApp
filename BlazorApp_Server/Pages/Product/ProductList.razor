@page "/product"

@inject IProductRepository _productRepository
@inject IJSRuntime _jsRuntime

<_DeleteConfirmation IsProcessing="IsLoading" ConfirmationChanged="ConfirmDelete"></_DeleteConfirmation>
<div class="row mt-4">
    <div class="col-6">
        <h4 class="card-title text-primary">Produkter</h4>
    </div>
    <div class="col-4 offset-2">
        <a href="product/create" class="btn btn-primary form-control">Ny produkt</a>
    </div>
    <div class="col-12">
        @if (Products.Any())
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Navn</th>
                        <th>Kategori</th>
                        <th>Kundefavoritt</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var objProduct in Products)
                    {
                        <tr>
                            <td>
                                @objProduct.ProductName
                            </td>
                            <td>
                                @objProduct.Category.Name
                            </td>
                            <td>
                                <input type="checkbox" disabled checked="@objProduct.IsCustomersFavorite">
                            </td>
                            <td>
                                <NavLink href="@($"product/edit/{objProduct.ProductId}")" class="btn btn-primary">Rediger</NavLink>
                                <button class="btn btn-danger" @onclick="()=>HandleDelete(objProduct.ProductId)">Slett</button>
                            </td>
                        </tr>
                    }
                    
                </tbody>
            </table>
        }
        else
        {
            if (IsLoading)
            {
                <div class="text-center">
                    <div class="loader"></div>
                </div>
            }
            else
            {
                <p>Ingen produkter funnet.</p>
            }
        }
    </div>
</div>

@code {
    private IEnumerable<ProductDto> Products { get; set; } = new List<ProductDto>();
    public bool IsLoading { get; set; } = true;
    private int DeleteProductId { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadProducts();
        }

    }

    private async Task LoadProducts()
    {
        IsLoading = true;
        StateHasChanged();
        Products = await _productRepository.GetAll();
        IsLoading = false;
        StateHasChanged();
    }

    private void HandleDelete(int id)
    {
        DeleteProductId = id;
        _jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    public async Task ConfirmDelete(bool isConfirmed)
    {
        IsLoading = true;
        if (isConfirmed && DeleteProductId != 0)
        {
            await _productRepository.Delete(DeleteProductId);
            await _jsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
            await LoadProducts();
        }
        IsLoading = false;
    }
}
